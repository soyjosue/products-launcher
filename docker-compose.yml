version: "3"
name: "PRODUCTS-APP"
services:
  #####################################################
  nats-server:
    image: nats:latest
    restart: always
    ports:
      - ${NATS_SERVER_PORT}:8222
  #####################################################

  #####################################################
  client-gateway:
    build: ./client-gateway
    restart: always
    depends_on:
      - products-ms
      - orders-ms
      - nats-server
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    env_file:
      - ./client-gateway/.env
  #####################################################

  #####################################################
  products-ms:
    build: ./products-ms
    restart: always
    depends_on:
      - nats-server
    volumes:
      - ./products-ms/src:/usr/src/app/src
      - ./products-ms/prisma/dev.db:/usr/src/app/prisma/dev.db
    command: npm run start:dev
    env_file:
      - ./products-ms/.env
  #####################################################

  #####################################################
  orders-db:
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersDb
  orders-ms:
    build: ./orders-ms
    restart: always
    depends_on:
      - orders-db
      - products-ms
      - nats-server
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:docker-dev
    env_file:
      - ./orders-ms/.env
  #####################################################

  #####################################################
  payments-ms:
    build: ./payments-ms
    restart: always
    env_file:
      - ./payments-ms/.env
    depends_on:
      - nats-server
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    ports:
      - 3003:3003
    command: npm run start:dev
  #####################################################

  #####################################################
  auth-db:
    build:
      context: ./auth-ms/mongodb_replica
      args:
        MONGO_VERSION: 4
    environment:
      MONGO_REPLICA_HOST: auth-db
      MONGO_REPLICA_PORT: 27018
      MONGO_COMMAND: "mongo"
    ports:
      - "27018:27018"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "mongo",
          "admin",
          "--port",
          "27018",
          "--eval",
          "db.adminCommand('ping').ok",
        ]
      interval: 5s
      timeout: 2s
      retries: 20
  auth-ms:
    build: ./auth-ms
    restart: always
    env_file:
      - ./auth-ms/.env
    volumes:
      - ./auth-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - DATABASE_URL=${AUTH_DATABASE_URL}
  #####################################################
